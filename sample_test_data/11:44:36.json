{
    "0": {
        "domanda": "Quali delle seguenti attivit\u00e0 \u00e8 parte del processo di validazione dei requisiti ?",
        "scelte": [
            "1.\nAccertarsi che i requisiti definiscano un sistema che risolve il problema che l'utente pianifica di risolvere.",
            "2.\nAccertarsi che il sistema soddisfi i requisiti dati. ",
            "3.\nAccertarsi che l'architettura del sistema soddisfi i requisiti dati. "
        ],
        "risposta": "The correct answer is: Accertarsi che i requisiti definiscano un sistema che risolve il problema che l'utente pianifica di risolvere."
    },
    "1": {
        "domanda": "Il team di sviluppo di un azienda consiste di un senior software engineer e due sviluppatori junior. Usando un approccio plan-driven (ad esempio, water-fall) la fase di design impegna solo il membro senior per tre mesi e la fase di sviluppo e testing solo i due membri junior per tre mesi. Si assuma che non ci siano \"change requests\" e che il membro senior costi A Eur/mese ed i membri junior B Eur/mese. Qual'e' il costo dello sviluppo usando un approccio plan-driven come sopra ?",
        "scelte": [
            "1.\n3*A + 6*B",
            "2.\nA + 2*B",
            "3.\n3*A + 3*B"
        ],
        "risposta": "The correct answer is: 3*A + 6*B"
    },
    "2": {
        "domanda": "Il partition coverage di un insieme di test cases \u00e8 la percentuale di elementi della partition inclusi nei test cases. La partition \u00e8 una partizione finita dell'insieme di input della funzione che si sta testando.\nSi consideri il seguente programma C:\n-----------\n#include <stdio.h>\n#include <stdlib.h>\n#include <assert.h>\n#define N  5    /* number of test cases */\nint f1(int x)  { return (2*x); }\nint main() {  int  i, y;    int x[N];\n // define test cases\n  x[0] = 0; x[1] = 1; x[2] = -1; x[3] = 10; x[4] = -10;\n// testing\nfor (i = 0; i < N; i++)   {\n      y = f1(x[i]);       // function under testing\n      assert(y == 2*x[i]);   // oracle\n }\n   printf(\"All %d test cases passed\\n\", N);\n    return (0); \n}\nSi vuole testare la funzione f1(). A tal fine l'insieme degli interi viene partizionato come segue: \n{0, {-1}, {1}, {tutti glli interi negativi diversi da -1}, {tutti glli interi positivi diversi da 1}}\nIl programma main() sopra realizza il nostro testing per la funzione f1(). I test cases sono i valori in x[i].\nQuale delle seguenti \u00e8 la partition coverage conseguita?",
        "scelte": [
            "1.\n50%",
            "2.\n80%",
            "3.\n100%"
        ],
        "risposta": "The correct answer is: 100%"
    },
    "3": {
        "domanda": "Una azienda vende software utilizzando un contratto di Service Level Agreement (SLA) per cui l'utente paga 1000 Eur al mese di licenza e l'azienda garantisce che il software sia \"up and running\". Questo vuol dire che failures del software generano un costo (quello del repair). Sia C = 10000 Eur il costo del repair di una failure e R = P*C il valore atteso (rischio) del costo dovuto alle failures (dove P \u00e8 la probabilit\u00e0 di una software failure). Ovviamente affinch\u00e9 il business sia profittevole deve essere che R sia al pi\u00f9 1000 Eur. Qual'e' il valore massimo di P che garantisce la validit\u00e0 del modello di business di cui sopra ?",
        "scelte": [
            "1.\nP = 1/1000",
            "2.\nP=1/10000",
            "3.\nP = 1/10"
        ],
        "risposta": "The correct answer is: P = 1/10"
    },
    "4": {
        "domanda": "Si consideri il seguente modello Modelica:\nclass System\nInteger x;\ninitial equation\nx = 0;\nequation\nwhen sample(0, 2) then\n    x = 1 - pre(x);\nend when;\nend System;\nQuale delle seguenti affermazioni \u00e8 vera per la variabile intera x?",
        "scelte": [
            "1.\nPer tutti gli istanti di tempo della forma 1 + 4*k (con k = 0, 1, 2, 3, ...) x vale 0.",
            "2.\nPer tutti gli istanti di tempo della forma  3 + 4*k (con k = 0, 1, 2, 3, ...) x vale 1.",
            "3.\nPer tutti gli istanti di tempo della forma 1 + 4*k (con k = 0, 1, 2, 3, ...) x vale 1."
        ],
        "risposta": "The correct answer is: Per tutti gli istanti di tempo della forma 1 + 4*k (con k = 0, 1, 2, 3, ...) x vale 1."
    },
    "5": {
        "domanda": "Il rischio R pu\u00f2 essere calcolato come R = P*C, dove P \u00e8 la probabilit\u00e0 dell'evento avverso (software failure nel nostro contesto) e C \u00e8 il costo dell'occorrenza dell'evento avverso. Assumiamo che la probabilit\u00e0 P sia legata al costo di sviluppo S dalla formula P = exp(-b*S), dove b \u00e8 una opportuna costante note da dati storici aziendali. Quale sar\u00e0 il costo dello sviluppo S di un software il cui costo della failure \u00e8 C ed il rischio ammesso \u00e8 R?",
        "scelte": [
            "1.\nS = (1/b)*ln(R/C)",
            "2.\nS = b*ln(R/C)",
            "3.\nS = (1/b)*ln(C/R)"
        ],
        "risposta": "The correct answer is: S = (1/b)*ln(C/R)"
    },
    "6": {
        "domanda": "Si consideri un software sviluppato seguendo un approccio iterativo implementato con due fasi: F1 seguita da F2. Ciascuna fase ha costo A. Con probabilit\u00e0 p potrebbe essere necessario ripetere F1 una seconda volta.  Con probabilit\u00e0 q potrebbe essere necessario ripetere F2 una seconda volta. Qual'e' il costo atteso dello sviluppo dell'intero software?",
        "scelte": [
            "1.\nA*(1 + p +q)",
            "2.\nA*(3 + p +q)",
            "3.\nA*(2 + p +q)"
        ],
        "risposta": "The correct answer is: A*(2 + p +q)"
    },
    "7": {
        "domanda": "Si consideri il seguente requisito:\nRQ:  Dopo 60 unit\u00e0 di tempo dall'inizio dell'esecuzione vale la seguente propriet\u00e0:\nse 10 unit\u00e0 di tempo nel passato x era maggiore di 0 allora ora y \u00e8 negativa.\nTenendo presente che, al tempo time, delay(z, w) ritorna 0 se time <= w e ritorna il valore che z aveva al tempo (time - w), se time = w.\nQuale dei seguenti monitor meglio descrive il requisito RQ ?",
        "scelte": [
            "1.\nclass Monitor\nInputReal x, y; \nOutputBoolean wy;\nBoolean wz;\ninitial equation\nwy = false;\nequation\nwz = (time > 60) and (delay(x, 10) > 0) and (y >= 0);\nalgorithm\nwhen edge(wz) then\nwy := true;\nend when;\nend Monitor;",
            "2.\nclass Monitor\nInputReal x, y; \nOutputBoolean wy;\nBoolean wz;\ninitial equation\nwy = false;\nequation\nwz = (time > 60) or (delay(x, 10) > 0) or  (y >= 0);\n\nalgorithm\nwhen edge(wz) then\nwy := true;\nend when;\nend Monitor;",
            "3.\nclass Monitor\nInputReal x, y; \nOutputBoolean wy;\nBoolean wz;\ninitial equation\nwy = false;\nequation\nwz = (time > 60) and (delay(x, 10) <= 0) and (y >= 0);\nalgorithm\nwhen edge(wz) then\nwy := true;\nend when;\nend Monitor;"
        ],
        "risposta": "The correct answer is: class Monitor\nInputReal x, y; \nOutputBoolean wy;\nBoolean wz;\ninitial equation\nwy = false;\nequation\nwz = (time > 60) and (delay(x, 10) > 0) and (y >= 0);\nalgorithm\nwhen edge(wz) then\nwy := true;\nend when;\nend Monitor;"
    },
    "8": {
        "domanda": "Unit testing si concentra su:",
        "scelte": [
            "1.\nTestare funzionalit\u00e0 di unit\u00e0 software individuali, oggetti, classi o metodi.",
            "2.\nTestare le interfacce di ciascuna componente.",
            "3.\nTestare l'interazione tra componenti."
        ],
        "risposta": "The correct answer is: Testare funzionalit\u00e0 di unit\u00e0 software individuali, oggetti, classi o metodi."
    },
    "9": {
        "domanda": "Quale delle seguenti frasi meglio descrive l'obiettivo del \"check di consistenza\" che \u00e8 parte della \"requirements validation activity\".",
        "scelte": [
            "1.\nAssicurarsi che i requisiti funzionali descrivano tutte le funzionalit\u00e0 del sistema.",
            "2.\nAssicurarsi che per ogni requisito esista un insieme di test che lo possa verificare.",
            "3.\nAssicurarsi che non ci siano requisiti in conflitto con altri requisiti."
        ],
        "risposta": "The correct answer is: Assicurarsi che non ci siano requisiti in conflitto con altri requisiti."
    }
}